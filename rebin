def rebin(input, newbin, oldbin = 0.01):
  ''' takes spike counts from 'spks' and rebins them into a new time bin specified by newbin

  Args:
  input = three-dimensional data array with spike counts (dat['spks'], dimensions: neurons * trials * time bins)
  newbin = size of the new time bin in seconds
  oldbin = size of old time bin. default 0.01s
  '''

  # initialize variables
  poolbin = newbin/oldbin # calculates numbers of bins to be pooled into one new bin
  newcount = np.zeros((input.shape[0],input.shape[1],int(input.shape[2]/poolbin))) # create matrix of zeros with appropriate third dimension (number of bins)


  index = list(range(int(input.shape[2]/poolbin)))
  for idx in index:
      # sum up counts from one step to the next
      newcount[:,:,idx] = np.sum(input[:,:,[idx:idx*poolbin]]) # needs some help here!!
      print(idx)

  return newcount
